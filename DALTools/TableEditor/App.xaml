<Application x:Class="TableEditor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:pt="http://propertytools.org/wpf"
             xmlns:local="clr-namespace:TableEditor"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="White"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="White"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="White"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD"/>

        <DropShadowEffect x:Key="HoverEffect" BlurRadius="5" Color="#FF8ED0F9" Opacity="0" Direction="0" ShadowDepth="0"/>

        
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border
                            Background="#3F3F3F"
                            CornerRadius="4" 
                            BorderThickness="2"
                            Padding="0,5,0,5">
                            <Border.Effect>
                                <DropShadowEffect Direction="0" ShadowDepth="0" BlurRadius="5" Color="Gray"/>
                            </Border.Effect>
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Background="{TemplateBinding Background}">
                            <Label Margin="10,0,20,0" Content="{TemplateBinding Header}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="#575757"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="#FF2D2D30"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="#FF2D2D30"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style x:Key="HedgeWindow" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="#FF2D2D30"/>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome 
                        CaptionHeight="22"
                        CornerRadius="0" 
                        GlassFrameThickness="0,0,0,1"
                        NonClientFrameEdges="None"
                        ResizeBorderThickness="4"
                        UseAeroCaptionButtons="False"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Grid Background="{TemplateBinding Background}" Loaded="Window_Loaded" UseLayoutRounding="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="22"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Image Width="22" Height="22" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2,2,0,0" Source="res/icon.ico"/>
                            <Label Content="{TemplateBinding Title}" Height="33" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="32,0,0,0" Foreground="#E9E9E9"/>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True">
                                <Button x:Name="MinBtn" Style="{DynamicResource WindowFrameButton}" Click="Minimize_Click">
                                    <Image Width="25" Height="25" Source="res/IMG_FRAME_M.png"/>
                                </Button>
                                <Button x:Name="MaxBtn" Style="{DynamicResource WindowFrameButton}" Click="MaxBtn_Click">
                                    <Image Width="25" Height="25" Source="res/IMG_FRAME_MM.png"/>
                                </Button>
                                <Button x:Name="CloseBtn" Style="{DynamicResource WindowFrameButton}" Click="Close_Click">
                                    <Image Width="35" Height="25" Source="res/IMG_FRAME_C.png"/>
                                </Button>
                            </StackPanel>
                            <Grid Grid.Row="1" Background="#FF2D2D30">
                                <ContentPresenter/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsActive" Value="False">
                    <Setter Property="Background" Value="#FF404040"/>
                </Trigger>
                <Trigger Property="IsActive" Value="True">
                    <Setter Property="Background" Value="#2D2D30"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Border}" x:Key="WindowFrame">
            <Setter Property="BorderBrush" Value="#FF0066CC"/>
            <Setter Property="Background" Value="#FF2D2D30"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="WindowFrameButton">
            <Setter Property="Width" Value="35"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF3F3F41"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF3F3F41"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.57"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF3F3F41" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF3F3F41" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="Grip" TargetType="{x:Type Rectangle}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Fill" Value="Transparent" />
            <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
        </Style>

        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Background" Value="#FF2D2D30"/>
            <Setter Property="Foreground" Value="#0066CC"/>
            <Setter Property="BorderBrush" Value="#0066CC"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#FF333337"/>
            <Setter Property="BorderBrush" Value="#FF434346" />
        </Style>
        <!-- Tabs -->
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="BorderBrush" Value="#FF3F3F46" />
            <EventSetter Event="Selector.SelectionChanged" Handler="TabControl_SelectionChanged"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel IsItemsHost="True"/>
                            <Grid Grid.Row="1">
                                <ContentPresenter x:Name="PART_Presenter" ContentSource="SelectedContent" HorizontalAlignment="Stretch"/>
                                <Rectangle x:Name="PART_TempArea"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="GroupBox">
            <Setter Property="Background" Value="#FF007ACC"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="MinHeight"             Value="20px" />
            <Setter Property="MinWidth"              Value="20px" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid>
                            <Border x:Name="EffectBorder" Background="#2D2D30" CornerRadius="8,8,0,0" Effect="{StaticResource HoverEffect}"/>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" CornerRadius="8,8,0,0" BorderBrush="#FF3F3F46" Background="#FF333337" BorderThickness="1">
                                    <ContentPresenter Margin="8,4,0,4" ContentSource="Header" RecognizesAccessKey="True" />
                                </Border>

                                <Border Grid.Row="1" BorderThickness="1,0,1,1" CornerRadius="0,0,8,8" BorderBrush="#FF3F3F46">
                                    <ContentPresenter Margin="4" />
                                </Border>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                               Storyboard.TargetName="EffectBorder"
                                                               Storyboard.TargetProperty="(Effect).Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                                               Storyboard.TargetName="EffectBorder"
                                                               Storyboard.TargetProperty="(Effect).Opacity">
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="#FF007ACC"/>
            <Setter Property="Foreground" Value="#FFFFFFFF"/>
            <Setter Property="MinHeight"             Value="20px" />
            <Setter Property="MinWidth"              Value="20px" />
            <Setter Property="Effect" Value="{x:Null}"/>
            <Setter Property="LayoutTransform" >
                <Setter.Value>
                    <ScaleTransform x:Name="scaleTransform" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border TextBlock.Foreground="#FFFFFFFF"
                    x:Name="PART_Border"
                    BorderBrush="Transparent"
                    BorderThickness="0" Effect="{x:Null}" Background="{TemplateBinding Background}">
                            <ContentPresenter Margin="4,2,20,2"
              HorizontalAlignment="Left"
              VerticalAlignment="Center"
              ContentSource="Header" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#FF007ACC" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF1C97EA"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="Transparent"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Button -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels"   Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="MinHeight"             Value="10px" />
            <Setter Property="MinWidth"              Value="30px" />
            <Setter Property="Foreground"            Value="#FFFFFFFF" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border TextBlock.Foreground="White"
                    x:Name="Border"
                    BorderBrush="White"
                    BorderThickness=".2"
                    CornerRadius="4,4,4,4" Background="#FF3F3F46" >
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1" />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF686868" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFAFABAF" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF303030" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF656565" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focus">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF333337" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="2"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Others -->
        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type pt:TextBlockEx}">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Border TextBlock.Foreground="White"
                    x:Name="Border" Background="#FF3F3F46">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.1" />
                                        <VisualTransition GeneratedDuration="0" To="Pressed" />
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF686868" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFAFABAF" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="Focus">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF333337" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                          Storyboard.TargetName="Border">
                                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <ContentPresenter Margin="2"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True" />
                                <Thumb x:Name="PART_HeaderGripper"
                                       HorizontalAlignment="Right"
                                       Margin="0,0,-2,0"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="2,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Grid>
                            <Border x:Name="innerBorder" 
                                  Background="{TemplateBinding Background}" 
                                  Padding="{TemplateBinding Padding}" 
                                  SnapsToDevicePixels="true" />
                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="innerBorder" Property="Background" Value="#FF686868"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="innerBorder" Property="Background" Value="#FF686868"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Thumb}">
            <Setter Property="Width"
                  Value="2" />
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}"
                                Background="Transparent">
                            <Rectangle HorizontalAlignment="Center"
                                       Width="2"
                                       Fill="{TemplateBinding Background}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="1" Background="{StaticResource ScrollBar.Static.Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="rectangle" Background="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" CornerRadius="5"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="rectangle" Background="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" CornerRadius="5"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Background" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1,0"/>
            <Setter Property="Width" Value="8"/>
            <Setter Property="MinWidth" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="8"/>
                    <Setter Property="MinHeight" Value="8"/>
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ToggleButton" x:Key="ComboBoxToggle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FF2D2D30">
                            <Border BorderThickness="0.5" CornerRadius="2" BorderBrush="Gray">
                                <Path Data="M 0 0 L 4 4 L 8 0 Z" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0">
                                    <Path.Fill>
                                        <SolidColorBrush Color="White"/>
                                    </Path.Fill>
                                </Path>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Style="{StaticResource ComboBoxToggle}"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                          ClickMode="Press" Focusable="False"/>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                                              HorizontalAlignment="Left" VerticalAlignment="Center"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="5,0,0,0"/>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}">
                                <Border BorderThickness="1" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        Background="#FF2D2D30" BorderBrush="Gray" CornerRadius="2">
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Margin="0,5,0,5"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ComboBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter Margin="2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="#575757"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#575757"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type pt:DataGrid}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="RowsContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="Insert" Command="pt:DataGridCommands.InsertRows"/>
                        <MenuItem Header="Delete" Command="pt:DataGridCommands.DeleteRows"/>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="ColumnsContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="Insert" Command="pt:DataGridCommands.InsertColumns"/>
                        <MenuItem Header="Delete" Command="pt:DataGridCommands.DeleteColumns"/>
                        <Separator/>
                        <MenuItem Header="Sort smallest to largest" Command="pt:DataGridCommands.SortAscending"/>
                        <MenuItem Header="Sort largest to smallest" Command="pt:DataGridCommands.SortDescending"/>
                        <MenuItem Header="Do not sort" Command="pt:DataGridCommands.ClearSort"/>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="SheetContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Command="ApplicationCommands.Cut"/>
                        <MenuItem Command="ApplicationCommands.Copy"/>
                        <MenuItem Command="ApplicationCommands.Paste"/>
                        <MenuItem Command="ApplicationCommands.Delete"/>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type pt:DataGrid}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Grid x:Name="PART_Grid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{TemplateBinding RowHeaderWidth}"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{TemplateBinding ColumnHeaderHeight}"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ScrollViewer x:Name="PART_SheetScrollViewer" Grid.Column="1" Focusable="False" HorizontalScrollBarVisibility="Auto" Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                    <Grid x:Name="PART_SheetGrid" Background="Transparent">
                                        <Border x:Name="PART_SelectionBackground" Background="Transparent"/>
                                        <Border x:Name="PART_CurrentBackground" Background="{DynamicResource HMM.Window.BackgroundBrush2}"/>
                                        <Border x:Name="PART_Selection" BorderBrush="DarkGray" BorderThickness="3" Margin="-1,-1,-2,-2"/>
                                        <Border x:Name="PART_AutoFillSelection" BorderBrush="Gray" BorderThickness="3" Margin="-1,-1,-2,-2" Visibility="Hidden"/>
                                        <Border x:Name="PART_AutoFillBox" BorderBrush="Gray" BorderThickness="1" Background="Black" HorizontalAlignment="Right" Height="7" Margin="0,0,-4,-4" SnapsToDevicePixels="True" VerticalAlignment="Bottom" Width="7"/>
                                    </Grid>
                                </ScrollViewer>
                                <ScrollViewer x:Name="PART_ColumnScrollViewer" Grid.Column="1" HorizontalScrollBarVisibility="Hidden" Grid.Row="0" VerticalScrollBarVisibility="Hidden">
                                    <Grid x:Name="PART_ColumnGrid" Background="{DynamicResource HMM.Menu.DisabledColor}">
                                        <Border x:Name="PART_ColumnSelectionBackground" Background="{DynamicResource HMM.Window.BackgroundBrush2}"/>
                                    </Grid>
                                </ScrollViewer>
                                <ScrollViewer x:Name="PART_RowScrollViewer" Grid.Column="0" HorizontalScrollBarVisibility="Hidden" Grid.Row="1" VerticalScrollBarVisibility="Hidden">
                                    <Grid x:Name="PART_RowGrid" Background="Transparent">
                                        <Border x:Name="PART_RowSelectionBackground" Background="{DynamicResource HMM.Window.BackgroundBrush2}"/>
                                    </Grid>
                                </ScrollViewer>
                                <Grid Grid.Column="0" Grid.Row="0">
                                    <Border x:Name="PART_TopLeft" BorderBrush="Gray" BorderThickness="1" Background="Transparent" Margin="0">
                                        <Path Data="F1M0,11L11,11 11,0z" Fill="White" HorizontalAlignment="Right" Margin="3" VerticalAlignment="Bottom"/>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
